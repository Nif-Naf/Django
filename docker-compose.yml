version: "3.9"

services:

  django:
    build: .
    image: custom_django
    container_name: django
    hostname: django
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    ports:
      - "8000:8000"
    restart: on-failure
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:latest
    container_name: postgres
    hostname: ${DEVELOPMENT_DATABASE_HOST}
    environment:
      POSTGRES_DB: ${DEVELOPMENT_DATABASE_NAME}
      POSTGRES_USER: ${DEVELOPMENT_DATABASE_USER}
      POSTGRES_PASSWORD: ${DEVELOPMENT_DATABASE_PASSWORD}
    volumes:
      - ./postgresql/dumps:/project/dumps
      - ./postgresql/data:/var/lib/postgresql/data
    ports:
      - "5433:${DEVELOPMENT_DATABASE_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DEVELOPMENT_DATABASE_USER} -d ${DEVELOPMENT_DATABASE_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    hostname: redis
    command: redis-server --save 20 1 --loglevel warning
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    restart: always

################################################################################
# Celery workers.
################################################################################
  auth_regular_worker:
    build: .
    image: auth_regular_worker
    container_name: auth_regular_worker
    hostname: auth_regular_worker
    command: celery -A apps.authorization.workers.regular worker -l info
    depends_on:
      django:
        condition: service_started
    restart: always
